swagger: '2.0'
info:
  version: '1.0.0'
  title: 'Sample Project API'
  description: 'このAPIはサンプルプロジェクトです。'
tags:
  - name: customers
    description: 顧客情報API
  - name: hello
    description: Hello API
host: 'localhost:8003'
schemes:
  - http
paths:
  /customers:
    get:
      tags:
        - customers
      summary: 顧客情報取得API
      description: '顧客情報を取得します。'
      operationId: getUser
      responses:
        default:
          description: 取得成功
          schema:
            type: array
            items:
              $ref: '#/definitions/Customer'
    post:
      tags:
        - customers
      summary: 顧客情報登録API
      description: '顧客情報を登録します。'
      parameters:
        - in: body
          name: body
          description: '顧客情報を登録します。'
          required: true
          schema:
            $ref: '#/definitions/Customer'
      responses:
        200:
          description: 登録成功
          schema:
            $ref: '#/definitions/Customer'
  /customers/{id}:
    put:
      tags:
        - customers
      summary: 顧客情報更新API
      description: '顧客情報を更新します。'
      parameters:
        - name: id
          in: path
          description: 顧客ID
          required: true
          type: integer
          format: long
        - in: body
          name: body
          description: '顧客情報を更新します。'
          required: true
          schema:
            $ref: '#/definitions/CustomerRequest'
      responses:
        default:
          description: 更新成功
          schema:
            $ref: '#/definitions/Customer'
    delete:
      tags:
        - customers
      summary: 顧客情報削除API
      description: '顧客情報を削除します。'
      parameters:
        - name: id
          in: path
          description: 顧客ID
          required: true
          type: integer
          format: long
      responses:
        default:
          description: 削除成功
          schema:
            $ref: '#/definitions/Customer'
  /hello:
    get:
      tags:
        - hello
      summary: Hello API
      description: 'Hello API'
      responses:
        default:
          description: 取得成功
          schema:
            type: string
            example: 'Hello, World!'
definitions:
  Customer:
    type: object
    required:
      - id
      - name
      - lastName
    properties:
      id:
        type: integer
        format: long
        example: 100
      name:
        type: string
        example: Taro
      lastName:
        type: string
        example: Yamada
  CustomerRequest:
    type: object
    required:
      - name
      - lastName
    properties:
      name:
        type: string
        example: Taro
      lastName:
        type: string
        example: Yamada
externalDocs:
  description: 'Find out more about Swagger'
  url: 'http://swagger.io'
